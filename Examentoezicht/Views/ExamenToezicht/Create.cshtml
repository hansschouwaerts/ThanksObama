@model Examentoezicht.Models.Toezichtbeurt

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset class="form-horizontal">
        <legend>Toezichtbeurt</legend>

        <div class="control-group">
            @Html.LabelFor(model => model.Datum, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Datum)
                @Html.ValidationMessageFor(model => model.Datum, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Start, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Start)
                @Html.ValidationMessageFor(model => model.Start, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Einde, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Einde)
                @Html.ValidationMessageFor(model => model.Einde, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Duurtijd, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Duurtijd)
                @Html.ValidationMessageFor(model => model.Duurtijd, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Capaciteit, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Capaciteit)
                @Html.ValidationMessageFor(model => model.Capaciteit, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Gereserveerd, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Gereserveerd)
                @Html.ValidationMessageFor(model => model.Gereserveerd, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.AangemaaktOp, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.AangemaaktOp)
                @Html.ValidationMessageFor(model => model.AangemaaktOp, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.GewijzigdOp, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.GewijzigdOp)
                @Html.ValidationMessageFor(model => model.GewijzigdOp, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Digitaal, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Digitaal)
                @Html.ValidationMessageFor(model => model.Digitaal, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Campus, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Campus)
                @Html.ValidationMessageFor(model => model.Campus, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Departement, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Departement)
                @Html.ValidationMessageFor(model => model.Departement, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="form-actions no-color">
            <input type="submit" value="Create" class="btn" />
        </div>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

